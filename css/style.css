* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* header */
header {
  z-index: 10;
}

header .navbar-nav li {
  position: relative;
}

header .navbar-nav li::after {
  content: "";
  background-color: green;
  height: 3px;
  width: 0%;
  position: absolute;
}

header .navbar-nav li:hover:after {
  width: 100%;
  transition: all 0.5s;
}

header .navbar-nav li:hover a {
  color: green !important;
}

header .navbar-nav li.active::after {
  width: 100%;
}

header .navbar-nav li.active a {
  color: green !important;
}

/* carousel  */
.cyber_carousel .carousel-inner .carousel-item {
  height: 100vh;
}

.cyber_carousel .carousel-inner .carousel-item img {
  height: 100%;
  object-fit: cover;
}

.cyber_carousel .carousel-inner .carousel-item .carousel_content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(39, 43, 54, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  color: white;
}

.cyber_carousel .carousel-item .carousel_content img {
  width: 200px;
  height: 200px;
  border-radius: 50%;
}

/* project  */
/* .cyber_project .project_content ul button.active {
    background-color: green;
    border:  2px solid green !important;
    color: white !important;
} */

.cyber_project .project_content ul button.active {
  background-color: green;
  border: 2px solid green !important;
  color: white !important;
}

.cyber_project .project_content .project_item {
  cursor: pointer;
  box-shadow: 0 0 0.4rem rgba(0, 0, 0, 0.13);
  border-bottom-right-radius: 16px;
  border-bottom-left-radius: 16px;
}

.project_content .project_item .project_text {
  border-bottom-right-radius: 16px;
  border-bottom-left-radius: 16px;
  border: 1px solid transparent;
  transition: all 0.5s;
  border-top: none;
}

.project_content .project_item:hover .project_text {
  border-color: green;
}

.project_content .project_item:hover .project_text h4 {
  color: green;
}

/* cyberAvai  */

.cyber_avai {
  background-image: url(./../img/3.jpg);
  background-attachment: fixed;
  color: white;
  padding: 60px 0;
  background-size: cover;
  position: relative;
  text-align: center;
}

.cyber_avai::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(7, 10, 12, 0.72);
}

.avai_content {
  display: block;
  gap: 20px;
}

.avai_content .avai_item {
  background: rgba(104, 103, 103, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  padding: 40px;
  transition: all 0.5s;
}

.avai_content .avai_item i {
  color: green;
  font-size: 48px;
}

.avai_content .avai_item h3 {
  font-size: 20px;
  color: #fff;
  line-height: 30px;
  padding-top: 25px;
  font-weight: bold;
}

.avai_content .avai_item p {
  padding-top: 15px;
  font-size: 16px;
  line-height: 24px;
  color: white;
}

.avai_content .avai_item:hover {
  background-color: black;
  border-color: white;
}

/* khi sử dụng @media nếu dùng max-width thì sẽ lấy tất cả các thiết bị có vùng nhìn từ 0 đến giá trị max-width */
/* quy tắc khi sử dụng @media max-width là chúng ta sẽ để các media có giá trị max width lớn hơn nằm trên các media có gt nhỏ hơn */
/* @media screen and (max-width: 768px) {
    .avai_content {
        flex-wrap: wrap;
    }
    .avai_content .avai_item {
        width: 48%;
    }
} 
    
@media screen and (max-width: 576px) {
    .avai_content .avai_item {
        width: 100%;
    }
} */

/* khi sử dụng @media nếu dùng min-width thì sẽ lấy tất cả các thiết bị có vùng nhìn từ giá trị min-width đến vô cực */
/* quy tắc khi sử dụng @media min-width là chúng ta sẽ để các media có giá trị min-width nhỏ hơn nằm trên các media có gt min-width lớn hơn */
@media screen and (min-width: 576px) {
  .avai_content {
    display: flex;
  }
}

@media screen and (min-width: 992px) {
  .avai_content {
    flex-wrap: wrap;
  }
  .avai_item {
    width: calc(50% - 20px);
  }
}
